user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 8192;
    multi_accept on;
    use epoll;
}

http {

    # tcp set
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    limit_req_zone $binary_remote_addr zone=ip_zone:10m rate=10r/s;

    keepalive_timeout 60;
    server_tokens off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 100;
    gzip_buffers 16 8k;
    gzip_proxied any;

    gzip_types
    text/plain
    application/json
    application/xml
    application/rss+xml
    image/svg+xml;

    reset_timedout_connection on;

    upstream docker-express {
        server express:3000;
    }

    server {
        listen 80;
        server_name localhost;
        client_body_timeout 5s;
        client_header_timeout 5s;
        client_max_body_size 10M;
        limit_req zone=ip_zone burst=5;
        limit_req_status 429;

        include /etc/nginx/allow-cloudflare-only.conf;

        location /api {
            include /etc/nginx/cf.conf;
            include /etc/nginx/proxy.conf;
            proxy_pass http://docker-express;
        }

        location /graphql {
            include /etc/nginx/proxy.conf;
            proxy_pass http://docker-express;
        }

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
        }

        location / {
            access_log off;
            return 403;
        }

    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    include /etc/nginx/conf.d/*.conf;
}