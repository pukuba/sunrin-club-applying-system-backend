scalar StudentID
scalar Club

type Form {
    studentId: StudentID!
    name: String!
    club: String!
    answerList: [String]!
    portfolioURL: URL
    otherURLs: [URL]!
    formId: ObjectID!
    date: DateTime!
}

input CreateFormInput {
    studentId: StudentID!
    name: String! @constraint(maxLength: 5)
    club: Club!
    answerList: [String!]!
    portfolioURL: URL
    otherURLs: [URL]!
}

extend type Mutation {
    createForm(
        input: CreateFormInput!
    ): Form!
}

extend type Query {

    # 동아리 별로 신청서를 가져옵니다
    getFormByClub(
        club: Club!
        offset: Int! = 10
        cursor: ObjectID
    ): FormConnection!
}

type FormEdge {
    node: Form!
    cursor: ObjectID!
}

type FormConnection {
    totalCount: Int!
    edges: [FormEdge!]!
    pageInfo: PageInfo!
}